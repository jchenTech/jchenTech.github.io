<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on jchen&#39;s blog</title>
    <link>http://jchenTech.github.io/tags/Git/</link>
    <description>Recent content in Git on jchen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 23 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://jchenTech.github.io/tags/Git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git入门与常用指令</title>
      <link>http://jchenTech.github.io/post/Git/Git%E5%85%A5%E9%97%A8%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jchenTech.github.io/post/Git/Git%E5%85%A5%E9%97%A8%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</guid>
      <description>1 获取 Git 仓库 有两种取得 Git 项目仓库的方法。 在现有目录中初始化仓库: 进入项目目录运行 git init 命令,该命令将创建一个名为 .git 的子目录。 从一个服务器克隆一个现有的 Git 仓库: git clone [url] 自定义本地仓库的名字: git clone [url] directoryname 2 记录每次更新到仓库 检测当前文件状态 : git status 提出更改（把它们添加到暂存区）：git add filename (针</description>
    </item>
    
    <item>
      <title>如何删除Github上的文件夹</title>
      <link>http://jchenTech.github.io/post/Git/%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4Github%E4%B8%8A%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jchenTech.github.io/post/Git/%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4Github%E4%B8%8A%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>&lt;p&gt;要知道在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决，&lt;/p&gt;
&lt;p&gt;（1）首先进入master文件夹下, &lt;code&gt;Git Bash Here&lt;/code&gt; ,打开命令窗口 &lt;code&gt;$ git --help&lt;/code&gt; 帮助命令&lt;/p&gt;
&lt;p&gt;（2）&lt;code&gt;$ git pull origin master&lt;/code&gt; 将远程仓库里面的项目拉下来，&lt;code&gt;$ dir&lt;/code&gt;  查看有哪些文件夹&lt;/p&gt;
&lt;p&gt;（3）此时&lt;code&gt;$ git rm -r --cached target&lt;/code&gt;  删除&lt;code&gt;target&lt;/code&gt;文件夹，&lt;code&gt;$ git commit -m &#39;Deleted target&#39;&lt;/code&gt;  提交。&lt;/p&gt;
&lt;p&gt;（4）最后&lt;code&gt;$ git push -u origin master &lt;/code&gt;将本次更改更新到github项目上去，删除完毕。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
