<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>反射 on jchen&#39;s blog</title>
    <link>http://jchenTech.github.io/tags/%E5%8F%8D%E5%B0%84/</link>
    <description>Recent content in 反射 on jchen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 27 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://jchenTech.github.io/tags/%E5%8F%8D%E5%B0%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaSE连载 | 反射</title>
      <link>http://jchenTech.github.io/post/Java/%E5%8F%8D%E5%B0%84/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://jchenTech.github.io/post/Java/%E5%8F%8D%E5%B0%84/</guid>
      <description>1 反射的概述 1.1 反射主要内容 Java反射机制 理解Class类并获取Class实例 类的加载与ClassLoader的理解 创建运行时类的对象 获取运行时类的完整结构 调用运行时类的指定结构 反射的应用：动态代理 1.2 反射的理解 Reflection(反射)是被视为动态语言的关键，反射机制允许程序在</description>
    </item>
    
  </channel>
</rss>
